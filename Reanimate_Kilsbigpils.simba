{$UNDEF SCRIPT_REVISION}{$DEFINE SCRIPT_REVISION := '1'}
{$I SRL-T/osr.simba}
{$I WaspLib/osr.simba}
{$I WaspLib/osr/handlers/teleports/transport.simba}
begin Login.PlayerIndex := 0; end;
{
 _  ___ _    _    _           _ _
| |/ (_) |__| |__(_)__ _ _ __(_) |___
| ' <| | (_-< '_ \ / _` | '_ \ | (_-<
|_|\_\_|_/__/_.__/_\__, | .__/_|_/__/
                   |___/|_|
        Dark Altar Reanimate

            -[Credits]-
   @SimonK, @Skunkworks, @Club XJ,
@Student, @sebastiaan, @CanadianJames,
              @TazE                    }

{--          -- REQ. INFO --           --
 *- Set EXP Bar to PRAYER ONLY. NOT TOTAL SKILLS. (If you want accurate EXP/Hr reports)
 *- Make sure to already have your armour + weapon equiped before starting.
 *- Check the official OSRS Wiki for more info:
https://oldschool.runescape.wiki/w/Pay-to-play_Prayer_training#Reanimating_ensouled_heads   }

{............-= [   -SETTINGS START-   ] =-............}

Const
  HeadName = 'Ensouled bloodveld head'; // Ensouled head name (case sensitive)

  UseProtectionPrayer := True; // Want to use Protection Prayers?
  Usefood             := False; // Want to use food?
  FoodName            := 'Shark'; // (if Usefood = True) - Shark, Manta ray, etc. also (case sensitive)
  FoodAmount          := 4; // (if Usefood = True) - Amount to withdraw from bank

  BankingLocation         := 'Ferox Enclave'; // "Castle Wars", "Ferox Enclave", "Grand Exchange"
  DarkAltarTeleportMethod := 'Fairy Ring'; // "Arceus Library" or "Fairy Ring" (Requires Ardougne cloak 1..4).
  FairyRingStaff          := 'Dramen staff'; // "Dramen staff" or "Lunar staff"

  ExperimentalSummonSpot := True; // *WARNING* - THIS IS A TEST FEATURE! USE AT YOUR OWN RISK.

  Enable_Breaks := True; // (True/False) Want to use Breaks?
  Enable_Sleep  := False; // (True/False) Want to use Sleep?

  PreferedWorldRegion := 'EU'; // (Case Sensitive) Can be EU/NAEast/NAWest/AUS, can also be "ANY" will use any of the existing Regions.
  UseTotalWorlds      := True; // Will hop also to Total Level Worlds

  //WorldListCustom  := []; // Currently unused.

{.............-= [   -SETTINGS END-   ] =-.............}

var
  StartXP, HeadCountRep, PrayerLevel, TotalLevel,
  ArdyDiary, LumbridgeDiary :  Int32;
  ArdyCloak, MainWeapon     : String;
  RSW                       :  TRSWalker;
  Transport                 :  TUniversalTransport;
  HoverSpell                :  TBox;
  SciptVer                  := {$MACRO SCRIPT_REVISION};

Const
  FeroxEnclaveArea : Tbox = [7773, 1811, 8167, 2075];
  MonasteryArea    : TBox = [5697, 3478, 6092, 3660];
  SummonArea       : Tbox = [2052, 885, 2321, 976];
  CWarsArea        : Tbox = [5136, 4056, 5173, 4120];
  ZeahArea         : TBox = [1854, 899, 2263, 1139];
  GEArea           : Tbox = [7780, 2300, 8400, 2950];
  InvBox           : TBox = [629, 170, 655, 200];
  SummonSpots      : TPointArray = [[2188, 940], [2184, 940], [2180, 940], [2176, 940],
                                    [2172, 940], [2180, 944], [2184, 944], [2160, 948],
                                    [2156, 948]];

procedure LoginHandler;
begin
  if (not RSClient.IsLoggedIn) then
    if Login.GetPlayer.Password <> '' then
      Login.LoginPlayer
    else
    begin
      writeln('No player credentials');
      Exit;
    end;
end;

// World Hopper
function PlayersNearby: Boolean;
var
  dots: TPointArray;
begin
  dots := Minimap.GetDots(ERSMinimapDot.PLAYER);
  if dots.Len = 0 then Exit(False);
  FilterPointsDist(dots, 0, 10, Minimap.Center.X, Minimap.Center.Y);
  Result := dots.Len <> 0;
end;
// World Hopper

// [Experimental] - World Handler - Specific Worlds
function WorldSelectionHandler: TIntegerArray;
var
  //                                EU -START-                                  //
  WorldListEU      := [302 .. 304, 309 .. 312, 317, 325, 327, 328, 333, 334,
                       336, 341 .. 344, 350 .. 352, 358 .. 360, 367, 368, 375,
                       376, 395, 443, 444, 459, 463 .. 466, 505 .. 525, 567];
  TLWEU_1250       := [447, 364]; TLWEU_1500 := [448, 366]; TLWEU_1750 := [449, 373];
  TLWEU_2000       := [396, 349]; TLWEU_2200 := [450, 363];
  //                                 EU -END-                                   //

  //                              NAEast -START-                                //
  WorldListNAEast  := [305, 314, 321, 322, 329, 330, 337, 346, 353, 354, 362,
                       370, 377, 386, 477, 478, 480 .. 482, 484 .. 496];
  TLWNAEast_1250   := [353]; TLWNAEast_1500 := [416]; TLWNAEast_1750 := [467];
  TLWNAEast_2000   := [361]; TLWNAEast_2200 := [415];
  //                              NAEast -END-                                  //

  //                              NAWest -START-                                //
  WorldListNAWest  := [306, 307, 313, 315, 320, 323, 324, 331, 332, 338 .. 340,
                       347, 348, 355 .. 357, 374, 378, 421, 422, 441 .. 446];
  TLWNAWest_1250   := [429]; TLWNAWest_1500 := [420]; TLWNAWest_2000 := [428];
  //                               NAWest -END-                                 //

  //                                AUS -START-                                 //
  WorldListAUS     := [387 .. 390, 424, 425, 531, 532, 534, 535];
  TLWAUS_1250      := [529]; TLWAUS_1500 := [528]; TLWAUS_1750 := [391];
  TLWAUS_2000      := [527]; TLWAUS_2200 := [526];
  //                                 AUS -END-                                  //
begin
case PreferedWorldRegion of
  'EU':
    begin
      if UseTotalWorlds then
        if (TotalLevel >= 1250) and (TotalLevel <= 1499) then
          begin
            if srl.Dice(70) then result := WorldListEU else result := TLWEU_1250;
          end;
        if (TotalLevel >= 1500) and (TotalLevel <= 1749) then
          begin
            if srl.Dice(70) then result := WorldListEU else result := TLWEU_1500;
          end;
        if (TotalLevel >= 1750) and (TotalLevel <= 1999) then
          begin
            if srl.Dice(70) then result := WorldListEU else result := TLWEU_1750;
          end;
        if (TotalLevel >= 2000) and (TotalLevel <= 2199) then
          begin
            if srl.Dice(70) then result := WorldListEU else result := TLWEU_2000;
          end;
        if (TotalLevel >= 2200) then
          begin
            if srl.Dice(70) then result := WorldListEU else result := TLWEU_2200;
          end
      else
        result := WorldListEU;
    end;

  'NAEast':
    begin
      if UseTotalWorlds then
        begin
            if srl.Dice(70) then result := WorldListNAEast else result := TLWNAEast_1250;
          end;
        if (TotalLevel >= 1500) and (TotalLevel <= 1749) then
          begin
            if srl.Dice(70) then result := WorldListNAEast else result := TLWNAEast_1500;
          end;
        if (TotalLevel >= 1750) and (TotalLevel <= 1999) then
          begin
            if srl.Dice(70) then result := WorldListNAEast else result := TLWNAEast_1750;
          end;
        if (TotalLevel >= 2000) and (TotalLevel <= 2199) then
          begin
            if srl.Dice(70) then result := WorldListNAEast else result := TLWNAEast_2000;
          end;
        if (TotalLevel >= 2200) then
          begin
            if srl.Dice(70) then result := WorldListNAEast else result := TLWNAEast_2200;
          end
      else
        result := WorldListNAEast;
    end;

  'NAWest':
    begin
      if UseTotalWorlds then
        if (TotalLevel >= 1250) and (TotalLevel <= 1499) then
          begin
            if srl.Dice(70) then result := WorldListNAWest else result := TLWNAWest_1250;
          end;
        if (TotalLevel >= 1500) and (TotalLevel <= 1999) then
          begin
            if srl.Dice(70) then result := WorldListNAWest else result := TLWNAWest_1500;
          end;
        if (TotalLevel >= 2000) then
          begin
            if srl.Dice(70) then result := WorldListNAWest else result := TLWNAWest_2000;
          end
      else
        Result := WorldListNAWest;
    end;

  'AUS':
    begin
      if UseTotalWorlds then
        if (TotalLevel >= 1250) and (TotalLevel <= 1499) then
          begin
            if srl.Dice(70) then result := WorldListAUS else result := TLWAUS_1250;
          end;
        if (TotalLevel >= 1500) and (TotalLevel <= 1749) then
          begin
            if srl.Dice(70) then result := WorldListAUS else result := TLWAUS_1500;
          end;
        if (TotalLevel >= 1750) and (TotalLevel <= 1999) then
          begin
            if srl.Dice(70) then result := WorldListAUS else result := TLWAUS_1750;
          end;
        if (TotalLevel >= 2000) and (TotalLevel <= 2199) then
          begin
            if srl.Dice(70) then result := WorldListAUS else result := TLWAUS_2000;
          end;
        if (TotalLevel >= 2200) then
          begin
            if srl.Dice(70) then result := WorldListAUS else result := TLWAUS_2200;
          end
      else
        Result := WorldListAUS;
    end;

  'ANY':
    begin
      if UseTotalWorlds then
        if (TotalLevel >= 1250) and (TotalLevel <= 1499) then

        if (TotalLevel >= 1500) and (TotalLevel <= 1749) then

        if (TotalLevel >= 1750) and (TotalLevel <= 1999) then

        if (TotalLevel >= 2000) and (TotalLevel <= 2199) then

        if (TotalLevel >= 2200) then

      else
        Result := [387 .. 390, 424, 425, 531, 532, 534, 535];
    end;

  end;
end;
// [Experimental] - World Handler - Specific Worlds

function EnsouledHeadHandler: ERSSpell;
begin
  case HeadName of
    'Ensouled goblin head', 'Ensouled monkey head', 'Ensouled imp head',
    'Ensouled minotaur head', 'Ensouled scorpion head', 'Ensouled bear head',
    'Ensouled unicorn head':
      result := ERSSPELL.BASIC_REANIMATION;

    'Ensouled dog head', 'Ensouled chaos druid head', 'Ensouled ogre head',
    'Ensouled giant head', 'Ensouled elf head', 'Ensouled troll head',
    'Ensouled horror head':
      result := ERSSPELL.ADEPT_REANIMATION;

    'Ensouled kalphite head', 'Ensouled dagannoth head',
    'Ensouled bloodveld head', 'Ensouled tzhaar head', 'Ensouled demon head',
    'Ensouled hellhound head':
      result := ERSSPELL.EXPERT_REANIMATION;

    'Ensouled aviansie head', 'Ensouled abyssal head', 'Ensouled dragon head':
      result := ERSSPELL.MASTER_REANIMATION;

    else
      result := ERSSPELL.UNKNOWN;
  end;
end;

function PrayerProtectionHandler: String;
begin
  case HeadName of
  'Ensouled goblin head', 'Ensouled monkey head', 'Ensouled imp head',
  'Ensouled minotaur head', 'Ensouled scorpion head', 'Ensouled bear head',
  'Ensouled unicorn head', 'Ensouled dog head', 'Ensouled chaos druid head',
  'Ensouled ogre head','Ensouled giant head', 'Ensouled elf head', 'Ensouled troll head',
  'Ensouled horror head', 'Ensouled kalphite head', 'Ensouled bloodveld head',
  'Ensouled tzhaar head', 'Ensouled demon head', 'Ensouled hellhound head',
  'Ensouled aviansie head', 'Ensouled abyssal head', 'Ensouled dragon head':
  result := 'Melee';

  'Ensouled dagannoth head':
  result := 'Ranged';
  end;
end;

// TEMP SOLUTION TO HEADS NOT GIVING AVERAGE PRICE (Wasp Dumper currently has incorrect IDs) //
function EnsouledHeadID: Int32;
begin
  case HeadName of
    'Ensouled goblin head'      : result := 13448;
    'Ensouled monkey head'      : result := 13451;
    'Ensouled imp head'         : result := 13454;
    'Ensouled minotaur head'    : result := 13457;
    'Ensouled scorpion head'    : result := 13460;
    'Ensouled bear head'        : result := 13463;
    'Ensouled unicorn head'     : result := 13466;
    'Ensouled dog head'         : result := 13469;
    'Ensouled chaos druid head' : result := 13472;
    'Ensouled ogre head'        : result := 13478;
    'Ensouled giant head'       : result := 13475;
    'Ensouled elf head'         : result := 13481;
    'Ensouled troll head'       : result := 13484;
    'Ensouled horror head'      : result := 13487;
    'Ensouled kalphite head'    : result := 13490;
    'Ensouled dagannoth head'   : result := 13493;
    'Ensouled bloodveld head'   : result := 13496;
    'Ensouled tzhaar head'      : result := 13499;
    'Ensouled demon head'       : result := 13502;
    'Ensouled hellhound head'   : result := 26997;
    'Ensouled aviansie head'    : result := 13505;
    'Ensouled abyssal head'     : result := 13508;
    'Ensouled dragon head'      : result := 13511;
  end;
end;
// TEMP SOLUTION TO HEADS NOT GIVING AVERAGE PRICE (Wasp Dumper currently has incorrect IDs) //

procedure DragonProtectionHandler;
var
i : int32;
Found: Boolean;
DragonFireShieldArray := ['Anti-dragon shield', 'Dragonfire shield',
                          'Dragonfire ward', 'Ancient wyvern shield'];
begin
  if (HeadName = 'Ensouled dragon head') then
  begin
    for i := 0 to High(DragonFireShieldArray) do
    begin
      Found := Equipment.ContainsItem(DragonFireShieldArray[i]);
      if Found then
        begin
          Writeln('Found ', DragonFireShieldArray[i], ' in the Shield slot');
        end
      else
        begin
          Writeln('Did not find any of the required shields in the Shield slot');
        end;
    end;
  end;
end;

procedure UselessBloatinc;
begin
  writeln('=====================================');
  writeln(" _  ___ _    _    _           _ _    ");
  writeln("| |/ (_) |__| |__(_)__ _ _ __(_) |___");
  writeln("| ' <| | (_-< '_ \ / _` | '_ \ | (_-<");
  writeln("|_|\_\_|_/__/_.__/_\__, | .__/_|_/__/");
  writeln("                   |___/|_|          ");
  writeln('=====================================');
  writeln('        Dark Altar Reanimate');
  writeln('               Rev. ',SciptVer);
  writeln('=====================================');
end;

procedure Init();
  begin
  ClearDebug();

  ArdyDiary             := Achievements.GetDiaryLevel(ERSAchievementDiary.ARDOUGNE);
  LumbridgeDiary        := Achievements.GetDiaryLevel(ERSAchievementDiary.LUMBRIDGE_AND_DRAYNOR);
  PrayerLevel           := Stats.GetLevel(ERSSkill.PRAYER);
  TotalLevel            := Stats.GetLevel(ERSSkill.TOTAL);
  ArdyCloak             := 'Ardougne cloak ' + ToStr(ArdyDiary);
  MainWeapon            := Combat.GetWeapon();

  if MainWeapon = 'Unarmed' then
  Terminatescript('No weapon equiped. Please make sure to equip your player before starting the script');

  if EnsouledHeadHandler = ERSSPELL.UNKNOWN then
  Terminatescript('Unknown head name, make sure to type it correctly');

  if not Magic.IsSpellBook(ERSSpellBook.ARCEUUS) then
  Terminatescript("Player isn't on Arceuus Spell Book, make sure to change to it before starting the script");

    UselessBloatinc;
    writeln('             -[Credits]-');
    writeln('    @SimonK, @Skunkworks, @Club XJ,' + #13#10 +
            '@Student, @sebastiaan, @CanadianJames, @TazE');
    writeln('=====================================');
    writeln('Banking location: ', BankingLocation);
    writeln('Dark Altar Teleport: ', DarkAltarTeleportMethod);
    writeln('Will reanimate: ', HeadName);
    writeln('Using Protection Prayers? ', toSTR(UseProtectionPrayer));
    writeln('Prayer level: ', PrayerLevel);
    writeln('Weapon: ', MainWeapon);
    writeln('=====================================');

    StartXP                           := XPBar.read;

    RSW.Setup('world');
    RSW.AdaptiveWalk                  := True;

    WLSettings.Antiban.Enabled        := True;
    WLSettings.Breaks                 := Enable_Breaks;
    WLSettings.Sleep.Enabled          := Enable_Sleep;
    WLSettings.RemoteInput.Enabled    := True;
    WLSettings.RemoteInput.BlockInput := False;
    WLsettings.Antiban.GameTabs       := True;
    WLsettings.Antiban.Chat           := False;
    WL.GameSettings.XPBarIsSetup      := True;
    WL.XP.IsSetup                     := True;

    Mouse.MissChance                  := Random(6,15);
    Mouse.Speed                       := Random(15,22);
    Mouse.Distribution                := MOUSE_DISTRIBUTION_GAUSS;

    RSMouseZoom.SetZoomLevel(Random(2, 24));

    Antiban.AddBreak(SRL.SkewedRand(37, 13, 90) * ONE_MINUTE, SRL.SkewedRand(5, 2, 12) * ONE_MINUTE);
    Antiban.AddSleep('01:00:00', 8 * ONE_HOUR, 0.1, 0.8);
    Antiban.Skills := [ERSSkill.PRAYER, ERSSkill.TOTAL, ERSSKILL.HITPOINTS,
                       ERSSKILL.DEFENCE, ERSSKILL.RANGE, ERSSKILL.DEFENCE,
                       ERSSKILL.ATTACK, ERSSKILL.STRENGTH];

    Magic.FindSpell(EnsouledHeadHandler, HoverSpell);
    Combat.SetAutoRetaliate(True);

    if Options.GetBrightnessLevel < 100 then
    Options.SetMaxBrightness;

    case FairyRingStaff of
      'Dramen staff':
        Transport.Init(EFairyTeleportItem.DRAMEN, ArdyCloak);

      'Lunar staff':
        Transport.Init(EFairyTeleportItem.LUNAR, ArdyCloak);
    end;

end;

function InFeroxEnclave(): Boolean;
begin
  Result := FeroxEnclaveArea.Contains(RSW.GetMyPos());
end;

function InGE(): Boolean;
begin
  Result := GEArea.Contains(RSW.GetMyPos());
end;

function InCWarsArea(): Boolean;
begin
  Result := CwarsArea.Contains(RSW.GetMyPos());
end;

function InMonasteryArea(): Boolean;
begin
  Result := MonasteryArea.Contains(RSW.GetMyPos());
end;

function InZeahArea(): Boolean;
begin
  Result := Zeaharea.Contains(RSW.GetMyPos());
end;

function InSummonArea(): Boolean;
begin
  Result := SummonArea.Contains(RSW.GetMyPos());
end;

procedure FeroxPoolHandler;
var
B                : TBox;
MSRect           : TRectangle;
PoolFinder       : TRSObjectFinder;
Pool             : T2DPointArray;

begin
    PoolFinder.Colors += CTS2(11183966, 11, 0.03, 0.78);
    PoolFinder.ClusterDistance := 5;
    MSRect := Minimap.PointToMsRect((Minimap.Center), 15, 15);
    B := MSRect.Bounds;
    B.LimitTo(Mainscreen.Bounds);
    Pool := MainScreen.FindObject(PoolFinder, B);
    Pool.SortBySize();
    Mouse.move(Pool[0].RandomValue);
    if (mainscreen.IsUpText('Drink Pool of Refreshment')) then
      begin
        repeat Mouse.Click(MOUSE_LEFT) until mainscreen.DidRedClick();
        Wait(SRL.SkewedRand(6300, 5500, 7000));
        Waituntil(Inventory.ClickItem(FairyRingStaff), 500, 2000);
      end;
end;

procedure WalkToSummon;
begin
  if not RSClient.IsLoggedIn then exit;

  if ExperimentalSummonSpot then
    begin
      writeln('Walking to the Summoning Spot (Experimental)');
      RSW.WebWalk([2214, 905], 25, 0.5);
      RSW.WebWalk([2214, 920], 7, 0);
    end
  else
    begin
      writeln('Walking to the Summoning Area');
      RSW.WebWalk(SummonSpots.RandomValue, 25, 0.9);
    end;
end;

procedure FailSafe;
  begin
    if chat.FindMessage('have room to', [CHAT_COLOR_BLACK]) then
    WalktoSummon;
    {While PlayersNearby do
      begin
        WorldHopper.Hop(Login.GetPlayer().Worlds);
      end;}
  end;

procedure Banking;
var
  RingofDueling := TRSBankItem.Setup('Ring of dueling(8)', 1, False);
  RingofWealth  := TRSBankItem.Setup('Ring of wealth(5)', 1, False);
  ArdougneCloak := TRSBankItem.Setup(ArdyCloak, 1, False);
  FairyRStaff   := TRSBankItem.Setup(FairyRingStaff, 1, False);
  FoodNameSTP   := TRSBankItem.Setup(FoodName, FoodAmount, False);

  Earthrune     := TRSBankItem.Setup('Earth rune', 100, False);
  Lawrune       := TRSBankItem.Setup('Law rune', 50, False);
  Bodyrune      := TRSBankItem.Setup('Body rune', 100, False);
  Soulrune      := TRSBankItem.Setup('Soul rune', 100, False);
  Bloodrune     := TRSBankItem.Setup('Blood rune', 100, False);
  Naturerune    := TRSBankItem.Setup('Nature rune', 100, False);
  EnsouledHead  := TRSBankItem.Setup(HeadName, -1, False);

begin
  Writeln('Time to Bank');
  if not RSClient.IsLoggedIn then exit;

  if (Minimap.GetHPPercent() <= 85) and Inventory.ContainsConsumable(ERSConsumable.FOOD) then
    repeat Inventory.Consume(ERSConsumable.FOOD);
    until (not Minimap.GetHPPercent() <= 85) or (not Inventory.ContainsConsumable(ERSConsumable.FOOD));

  if InCWarsArea then
    begin
      RSW.WebWalk([5164, 4115], 5, 0.1);
      wait(SRL.SkewedRand(500, 250, 1500));
    repeat Bank.open(ERSBANKLOCATION.CASTLE_WARS);
    until bank.IsOpen(1500, 500);
      wait(SRL.SkewedRand(750, 500, 1500));
    if not Inventory.ContainsItem('Ring of dueling(1..8)') then
      begin
        writeln('Withdrawing 1x Ring of dueling(8)');
        Bank.WithdrawItem(RingofDueling, False);
      end;
    end;

  if InFeroxEnclave then
    begin
      RSW.WebWalk([7914, 1924], 5, 0.1);
      wait(SRL.SkewedRand(500, 250, 1500));
      RSMouseZoom.SetZoomLevel(Random(35, 48));
    repeat Bank.open(ERSBANKLOCATION.FEROX);
    until bank.IsOpen(1500, 500);
      wait(SRL.SkewedRand(750, 500, 1500));
    if not Inventory.ContainsItem('Ring of dueling(1..8)') then
      begin
        writeln('Withdrawing 1x Ring of dueling(8)');
        Bank.WithdrawItem(RingofDueling, False);
      end;
    end;

  if InGE then
    begin
      RSW.WebWalk([8052, 2503], 5, 0.5);
      wait(SRL.SkewedRand(500, 250, 1500));
    repeat Bank.open(ERSBANKLOCATION.GRAND_EXCHANGE);
    until bank.IsOpen(1500, 500);
      wait(SRL.SkewedRand(750, 500, 1500));
    if not Inventory.ContainsItem('Ring of wealth(1..5)') then
      begin
        writeln('Withdrawing 1x Ring of wealth(5)');
        Bank.WithdrawItem(RingofWealth, False);
      end;
    end;

  case DarkAltarTeleportMethod of
  'Fairy Ring':
    begin
      if not Inventory.ContainsItem(ArdyCloak) then
        begin
          writeln('Withdrawing 1x ' + ArdyCloak);
          Bank.WithdrawItem(ArdougneCloak, False);
        end;

      if (LumbridgeDiary < 4) then
        begin
        if not Inventory.ContainsItem(FairyRingStaff) then
          begin
            writeln('Player has not completed the Elite Lumbridge Diary.');
            writeln('Withdrawing 1x ' + FairyRingStaff);
            Bank.WithdrawItem(FairyRStaff, False);
          end;
        end;
    end;

  'Arceus Library':
    begin
      if Inventory.CountItemStack('Earth rune') <= 10 then
        Bank.WithdrawItem(Earthrune, False);

      if Inventory.CountItemStack('Law rune') <= 10 then
        Bank.WithdrawItem(Lawrune, False);
    end;
  end;

if Usefood and not(Inventory.ContainsConsumable(ERSConsumable.FOOD)) then
  Bank.WithdrawItem(FoodNameSTP, False);

// Bank withdraw of runes depending on the spell used
case EnsouledHeadHandler of
  ERSSPELL.BASIC_REANIMATION:
    begin
      if Inventory.CountItemStack('Body rune') <= 100 then
        Bank.WithdrawItem(Bodyrune, False);
    end;

  ERSSPELL.ADEPT_REANIMATION:
    begin
      if Inventory.CountItemStack('Bodyrune') <= 100 then
        Bank.WithdrawItem(Bodyrune, False);

      if Inventory.CountItemStack('Soul rune') <= 100 then
        Bank.WithdrawItem(Soulrune, False);
    end;

  ERSSPELL.EXPERT_REANIMATION, ERSSPELL.MASTER_REANIMATION:
    begin
      if Inventory.CountItemStack('Blood rune') <= 100 then
        Bank.WithdrawItem(Bloodrune, False);

      if Inventory.CountItemStack('Soul rune') <= 100 then
        Bank.WithdrawItem(Soulrune, False);
    end;
end;

  If Inventory.CountItemStack('Nature rune') <= 50 then
    Bank.WithdrawItem(Naturerune, False);

     // Add logic for custom food instead of generic ERSConsumable.FOOD //
  //If not inventory.HasEnoughConsumable(ERSConsumable.FOOD) then
  //Bank.WithdrawConsumable(ERSConsumable.FOOD);
     // Add logic for custom food instead of generic ERSConsumable.FOOD //

     //check this later again
  //If not bank.ContainsItem(Headname) then
  //Terminatescript("Could not find [" + HeadName + "] in bank, stoping script.");

  If not Inventory.ContainsItem(HeadName) then
  begin
    Bank.WithdrawItem(EnsouledHead, False);
    waituntil(Inventory.ContainsItem(Headname), 250, 5000);
  end;

  If bank.IsOpen then Bank.close;
  Waituntil(not bank.IsOpen, 500, 15000);
end;

procedure ToZeah_FairyRing;
  begin
    if not RSClient.IsLoggedIn then exit;
    if InFeroxEnclave then
      begin
        FeroxPoolHandler;
      end;
    writeln('Traveling to Zeah using the FairyRing');
    writeln('Teleporting to Ardy Monastary');
    Transport.run(rsteleports.MONASTERY);
    Waituntil(InMonasteryArea, 2500, 7500);
    Transport.run(RSTeleports.CIS_NORTH_OF_THE_ARCEUUS_LIBRARY);
    Waituntil(INZeahArea, 1500, 6000);
    RSMouseZoom.SetZoomLevel(Random(2, 15));
    if (LumbridgeDiary < 4) then
    begin
        writeln('Equiping weapon: ', MainWeapon);
        Inventory.Open;
        Waituntil(Inventory.ClickItem(MainWeapon), 2000, 4500);
    end;
    HeadCountRep := HeadCountRep + Inventory.CountItem(HeadName);
  end;

procedure ToZeah_ArceusLibrary;
  begin
    if not RSClient.IsLoggedIn then exit;
      if InFeroxEnclave then
        begin
          FeroxPoolHandler;
        end;
    writeln('Traveling to Zeah using the Arceus Library teleport');
    Magic.CastSpell(ERSSPELL.ARCEUUS_LIBRARY_TELEPORT);
    Waituntil(INZeahArea, 500, 6000);
    RSMouseZoom.SetZoomLevel(Random(2, 15));
    HeadCountRep := HeadCountRep + Inventory.CountItem(HeadName);
  end;

procedure ToCwars;
  begin
    if not RSClient.IsLoggedIn then exit;
    writeln('Teleporting to Castle Wars');
    Transport.handleJewelleryTeleport(RSTeleports.CASTLE_WARS);
    Waituntil(InCWarsArea, 250, 8000);
  end;

procedure ToFeroxEnclave;
  begin
    if not RSClient.IsLoggedIn then exit;
    writeln('Teleporting to Ferox Enclave');
    Transport.handleJewelleryTeleport(RSTeleports.FEROX_ENCLAVE);
    Waituntil(InFeroxEnclave, 250, 8000);
  end;

procedure ToGE;
  begin
    if not RSClient.IsLoggedIn then exit;
    writeln('Teleporting to the Grand Exchange');
    Transport.handleJewelleryTeleport(RSTeleports.GRAND_EXCHANGE);
    Waituntil(InGE, 250, 8000);
  end;

procedure BankLocationHandler;
  begin
    case BankingLocation of
          'Ferox Enclave':
          begin
            ToFeroxEnclave();
            Waituntil(InFeroxEnclave, 500, 4300);
          end;

          'Castle Wars':
          begin
            ToCWars();
            Waituntil(InCWArsArea, 500, 4300);
          end;

          'Grand Exchange':
          begin
            ToGE();
            Waituntil(InGE, 500, 4300);
          end;
        end;
  end;

procedure Summon;
var
  HeadCount  : Integer;
begin
  if not RSClient.IsLoggedIn then exit;

   {While PlayersNearby do
    begin
      WorldHopper.Hop(Login.GetPlayer().Worlds);
    end;}

  if MainScreen.InCombat then
    begin
      writeln('In combat, waiting for it to end');
      if Usefood and (Minimap.GetHPPercent <= 67) then
        begin
        if Inventory.ContainsConsumable(ERSConsumable.FOOD) then
          Inventory.Consume(ERSConsumable.FOOD);
        end;

      if Minimap.GetHPPercent <= 25 then
        begin
          BankLocationHandler;
        end;

      WaitUntil(not MainScreen.WaitInCombat(2000), 500, 9000);
      exit;
    end
   else
      begin
      if (UseProtectionPrayer) and (minimap.GetPrayerLevel > 0) then
        begin
          if (PrayerLevel >= 40) and (PrayerProtectionHandler = 'Ranged') then
            begin
              writeln('Disabling ranged prayer');
              Prayer.DisablePrayer([ERSPrayer.PROTECT_FROM_MISSILES]);
            end;
          if (PrayerLevel >= 43) and (PrayerProtectionHandler = 'Melee') then
            begin
              writeln('Disabling melee prayer');
              Prayer.DisablePrayer([ERSPrayer.PROTECT_FROM_MELEE]);
            end;
         end;

      writeln('Starting reanimation');
      Magic.CastSpell(EnsouledHeadHandler);
      WaitUntil(Inventory.IsOpen, 500, 3000);
      HeadCount := Inventory.CountItem(HeadName);

      if not inventory.ContainsItem(HeadName) then
        begin
          Wait(SRL.SkewedRand(750, 500, 3500));
          Mouse.move(InvBox);
          Wait(Srl.SkewedRand(500, 300, 1000));
          Mouse.Click(MOUSE_LEFT);
          Waituntil(not Mainscreen.isuptext('Reanimate'), 500, 2000);
          writeln('No ensouled heads left, going to Bank');
          BankLocationHandler;
          exit;
        end;

      Inventory.MouseItem(HeadName);
      waituntil(Mainscreen.IsUpText(Headname), 250, 5000);
      Mouse.click(MOUSE_LEFT);
      wait(SRL.SkewedRand(6800, 6700, 7000));

      if (UseProtectionPrayer) and (minimap.GetPrayerLevel > 0) then
        begin
          if (PrayerLevel >= 40) and (PrayerProtectionHandler = 'Ranged') then
            begin
              writeln('Enabling ranged prayer');
              Prayer.ActivatePrayer([ERSPrayer.PROTECT_FROM_MISSILES]);
            end;
          if (PrayerLevel >= 43) and (PrayerProtectionHandler = 'Melee') then
            begin
              writeln('Enabling melee prayer');
              Prayer.ActivatePrayer([ERSPrayer.PROTECT_FROM_MELEE]);
            end;
        end;
      WaitUntil(not MainScreen.WaitNotInCombat(1500), 500, 9000);

      if HeadCount = 1 then
        inventory.open()
      else
        Mouse.move(HoverSpell);
      end;
  exit;
end;

procedure ScriptReport()
var
  XPEarned : Int32;
  CheckPrice := ItemData.GetAverage(EnsouledHeadID);
begin
  XPEarned := XPBar.Read - StartXP;
  UselessBloatinc;
  writeln('Time running: ', SRL.TimeRunning);
  writeln('Reanimated: ', HeadCountRep, ' ensouled heads');
  writeln('Reanimations hr: ', Round(((HeadCountRep) * 3600) / (GetTimeRunning / 1000)));
  writeln('Earned: ', SRL.FormatNumber(XPEarned), ' Exp');
  writeln('Currently making: ', SRL.FormatNumber(((XPEarned) * 3600) / (GetTimeRunning / 1000)),' Exp/Hr');
  writeln('Total GP cost: ', SRL.FormatNumber(CheckPrice * HeadCountRep));
  writeln('GP cost hr: ', SRL.FormatNumber((CheckPrice * HeadCountRep) / (GetTimeRunning / 1000)));
  if (Enable_Breaks) then writeln('Next Break in: ', Antiban.TimeUntilBreak(Antiban.Breaks[0]))
  else writeln('Breaks: - DISABLED -');
  if (Enable_Sleep) then writeln('Sleep: - ENABLED -')
  else writeln('Sleep: - DISABLED -');
  writeln('=====================================');
  if SRL.dice(1) then // Yoink from the roo man, made by student also
  WriteLn('Seb still has no mole pet KEKW');
end;

procedure MainLoop;
begin

  if (not RSClient.IsLoggedIn) then
    LoginHandler;

  Failsafe();

  if InSummonArea then
    begin
      Summon();
      exit;
    end;

  if InZeahArea and (not inSummonArea) then
    begin
      Antiban.DoAntiban();
      WalkToSummon();
      exit;
    end;

  if (InCWarsArea or InFeroxEnclave or InGE) and (not Inventory.ContainsItem(HeadName)) then
    begin
      Antiban.DoAntiban();
      Banking();
      ScriptReport();
      exit;
    end;

  if (InCwarsArea or InFeroxEnclave or InGE) and Inventory.ContainsItem(HeadName) and (DarkAltarTeleportMethod = 'Fairy Ring') then
    begin
      Antiban.DoAntiban();
      ToZeah_FairyRing();
      exit;
    end;

  if (InCwarsArea or InFeroxEnclave or InGE) and Inventory.ContainsItem(HeadName) and (DarkAltarTeleportMethod = "Arceus Library") then
    begin
      ToZeah_ArceusLibrary();
      exit;
    end;

  if (Not InSummonArea) and InZeahArea then
    begin
      WalkToSummon();
      exit;
    end;
end;

// Later implements (ignore)
{
// Prayer flicking //
repeat
Prayer.ActivatePrayer([ERSPrayer.PROTECT_FROM_MISSILES]);
wait(Srl.SkewedRand(700, 600, 1000));
Prayer.DisablePrayer([ERSPrayer.PROTECT_FROM_MISSILES]);
until not(mainscreen.incombat);
// Prayer flicking //

// World hopper //
While PlayersNearby() do begin
WorldHopper.Hop(Login.GetPlayer().Worlds);
// World hopper //

// Dynamic food withdraw depending on the monster + player hp + food healing amount //
// prayer pots? (Currently best to use ferox for prayer restore + hp) //
}
// Later implements (ignore)

begin
if (not RSClient.IsLoggedIn) then
    if Login.GetPlayer.Password <> '' then
      Login.LoginPlayer
    else
      TerminateScript('No player credentials');

  Init;

  if not (InCwarsArea or InFeroxEnclave or InGE) then
  Terminatescript("Please make sure you are in either the Ferox Enclave,
  Castle Wars or the Grand Exchange before starting the script");

  while true do
    begin
      MainLoop;
    end;
end.

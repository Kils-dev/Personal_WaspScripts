{$I SRL-T/osr.simba}
{$I WaspLib/osr.simba}
{$I WaspLib/osr/handlers/teleports/transport.simba}
{
 _  ___ _    _    _           _ _
| |/ (_) |__| |__(_)__ _ _ __(_) |___
| ' <| | (_-< '_ \ / _` | '_ \ | (_-<
|_|\_\_|_/__/_.__/_\__, | .__/_|_/__/
                   |___/|_|
    Script: Dark Altar Reanimate
              Rev. 1.0
            -[Credits]-
- @SimonK, @Skunkworks, @Club XJ, @Student                }

{--          -- REQ. INFO --           --
 * Set EXP Bar to PRAYER ONLY. NOT TOTAL SKILLS.
 * Make sure to already have your armour + weapon equiped before starting.
 * Check the official OSRS Wiki for more info:
https://oldschool.runescape.wiki/w/Pay-to-play_Prayer_training#Reanimating_ensouled_heads   }

{............-= [SETTINGS START] =-............}

Const
  HeadName = "Ensouled bloodveld head"; // Ensouled Head name (case sensitive)
  Usefood = False; // Want to use food?
  FoodName = "Sharks";  // Sharks, Manta Ray, etc. (case sensitive)
  SpellCast = ERSSPELL.EXPERT_REANIMATION; // Summon Spell name
  DarkAltarTeleportMethod = "Fairy Ring"; // "Arceus Library" or "Fairy Ring" (Requires Ardougne cloak 1..4).
  FairyRingStaff = "Dramen staff"; // "Dramen staff" or "Lunar staff"
  BankingLocation = "Castle Wars"; // "Castle Wars", "Ferox Enclave", "Grand Exchange"

{.............-= [SETTINGS END] =-.............}

var
  RSW: TRSWalker;
  Transport : TUniversalTransport;
  HoverSpell : TBox;
  Spell: ERSSpell;
  StartXP : Int32;
  MainWeapon := Combat.GetWeapon();
  ArdyDiary := Achievements.GetDiaryLevel(ERSAchievementDiary.ARDOUGNE);
  LumbridgeDiary := Achievements.GetDiaryLevel(ERSAchievementDiary.LUMBRIDGE_AND_DRAYNOR);
  ArdyCloak := 'Ardougne cloak ' + ToStr(ArdyDiary);
  ROD: TRSItemArray = ['Ring of dueling(8)', 'Ring of dueling(7)', 'Ring of dueling(6)', 'Ring of dueling(5)', 'Ring of dueling(4)', 'Ring of dueling(3)', 'Ring of dueling(2)', 'Ring of dueling(1)'];
  ROW: TRSItemArray = ['Ring of wealth(5)', 'Ring of wealth(4)', 'Ring of wealth(3)', 'Ring of wealth(2)', 'Ring of wealth(1)'];

Const
  FeroxEnclaveArea : Tbox = [7826, 1813, 8158, 2058];
  MonasteryArea    : TBox = [5697, 3478, 6092, 3660];
  SummonArea       : Tbox = [2061, 916, 22238, 968];
  CWarsArea        : Tbox = [5136, 4056, 5173, 4120];
  ZeahArea         : TBox = [1854, 899, 2263, 1139];
  GEArea           : Tbox = [7780, 2300, 8400, 2950];
  InvBox           : TBox = [629, 170, 655, 200];
  SummonSpots      : TPointArray = [[2188, 940], [2184, 940], [2180, 940], [2176, 940],
                                    [2172, 940], [2180, 944], [2184, 944], [2160, 948],
                                    [2156, 948]];

function EnsouledHeadHandler: ERSSpell;
begin
  case HeadName of
    'Ensouled goblin head', 'Ensouled monkey head', 'Ensouled imp head ',
    'Ensouled minotaur head', 'Ensouled scorpion head', 'Ensouled bear head',
    'Ensouled unicorn head':
      result := ERSSPELL.BASIC_REANIMATION;

    'Ensouled dog head', 'Ensouled chaos druid head', 'Ensouled ogre head',
    'Ensouled giant head', 'Ensouled elf head', 'Ensouled troll head',
    'Ensouled horror head':
      result := ERSSPELL.ADEPT_REANIMATION;

    'Ensouled kalphite head', 'Ensouled dagannoth head',
    'Ensouled bloodveld head', 'Ensouled tzhaar head', 'Ensouled demon head',
    'Ensouled hellhound head':
      result := ERSSPELL.EXPERT_REANIMATION;

    'Ensouled aviansie head', 'Ensouled abyssal head', 'Ensouled dragon head':
      result := ERSSPELL.MASTER_REANIMATION;

    else
      result := ERSSPELL.UNKNOWN;
  end;
end;

function PrayerProtectionHandler: Boolean;
begin
  case HeadName of
  'Ensouled goblin head', 'Ensouled monkey head', 'Ensouled imp head ',
  'Ensouled minotaur head', 'Ensouled scorpion head', 'Ensouled bear head',
  'Ensouled unicorn head', 'Ensouled dog head', 'Ensouled chaos druid head',
  'Ensouled ogre head','Ensouled giant head', 'Ensouled elf head', 'Ensouled troll head',
  'Ensouled horror head', 'Ensouled kalphite head', 'Ensouled bloodveld head',
  'Ensouled tzhaar head', 'Ensouled demon head', 'Ensouled hellhound head',
  'Ensouled aviansie head', 'Ensouled abyssal head', 'Ensouled dragon head':
  result := Prayer.ActivatePrayer(ERSPrayer.PROTECT_FROM_MELEE);

  'Ensouled dagannoth head':
  result := Prayer.ActivatePrayer(ERSPrayer.PROTECT_FROM_MISSILES);
  end;
end;

procedure Init();
  begin
  ClearDebug();

  if MainWeapon = 'Unarmed' then
  Terminatescript("No weapon equiped. Please make sure to equip your player before starting the script");

  if Spell = ERSSPELL.UNKNOWN then
  Terminatescript("Unknown Head name, make sure to type it correctly");

  if not Magic.IsSpellBook(ERSSpellBook.ARCEUUS) then
  Terminatescript("Player isn't on Arceuus Spell Book");

    writeln(" _  ___ _    _    _           _ _    ");
    writeln("| |/ (_) |__| |__(_)__ _ _ __(_) |___");
    writeln("| ' <| | (_-< '_ \ / _` | '_ \ | (_-<");
    writeln("|_|\_\_|_/__/_.__/_\__, | .__/_|_/__/");
    writeln("                   |___/|_|          ");
    writeln("=====================================");
    writeln("     Script: Dark Altar Reanimate");
    writeln("              Rev. 1.0");
    writeln("=====================================");
    writeln("             -[Credits]-");
    writeln("- @SimonK, @Skunkworks, @Club XJ, @Student");
    writeln("=====================================");
    writeln("Starting script...");
    writeln("Banking location: " + BankingLocation);
    writeln("Dark Altar Teleport: " + DarkAltarTeleportMethod);
    writeln("Will reanimate: " + HeadName);

    Login.PlayerIndex                 := 0;
    RSW.Setup('world');
    RSW.AdaptiveWalk := True;
    WLSettings.Antiban.Enabled        := True;
    WLSettings.Breaks                 := True;
    WLSettings.Sleep.Enabled          := False;
    WLSettings.RemoteInput.Enabled    := True;
    WLSettings.RemoteInput.BlockInput := False;
    WLsettings.Antiban.GameTabs       := False;
    WLsettings.Antiban.Chat           := False;
    WLsettings.Antiban.GameTabs       := False;
    WLsettings.Antiban.Chat           := False;
    WL.GameSettings.XPBarIsSetup      := True;
    WL.XP.IsSetup                     := True;
    Mouse.MissChance                  := Random(14, 23);
    Mouse.Speed                       := Random(15,24);
    Mouse.Distribution                := MOUSE_DISTRIBUTION_GAUSS;
    RSMouseZoom.SetZoomLevel(Random(10, 18));
    Magic.FindSpell(EnsouledHeadHandler, HoverSpell);
    case FairyRingStaff of
      'Dramen staff':
        Transport.Init(EFairyTeleportItem.DRAMEN, ArdyCloak);

      'Lunar staff':
        Transport.Init(EFairyTeleportItem.LUNAR, ArdyCloak);
    end;

    Combat.SetAutoRetaliate(True);

  if Options.GetBrightnessLevel < 100 then
    Options.SetMaxBrightness;

end;

procedure TAntiban.Setup(); override;
  begin
    Self.Skills := [ERSSkill.PRAYER, ERSSkill.TOTAL, ERSSKILL.HITPOINTS,
                    ERSSKILL.DEFENCE, ERSSKILL.RANGE, ERSSKILL.DEFENCE,
                    ERSSKILL.ATTACK, ERSSKILL.STRENGTH, ERSSKILL.MAGIC];
    Self.MinZoom := 2;
    Self.MaxZoom := 18;
    inherited;
  end;

function InFeroxEnclave(): Boolean;
begin
  Result := FeroxEnclaveArea.Contains(RSW.GetMyPos());
end;

function InGE(): Boolean;
begin
  Result := GEArea.Contains(RSW.GetMyPos());
end;

function InCWarsArea(): Boolean;
begin
  Result := CwarsArea.Contains(RSW.GetMyPos());
end;

function InMonasteryArea(): Boolean;
begin
  Result := MonasteryArea.Contains(RSW.GetMyPos());
end;

function InZeahArea(): Boolean;
begin
  Result := Zeaharea.Contains(RSW.GetMyPos());
end;

function InSummonArea(): Boolean;
begin
  Result := SummonArea.Contains(RSW.GetMyPos());
end;

procedure WalkToSummon; // Inside of Zeah
begin
  if not RSClient.IsLoggedIn then exit; //maybe remove later
  Writeln("Walking to the Summoning Area");
  //RSW.WebWalk(SummonSpots[random(Low(SummonSpots), High(SummonSpots))], 25, 0.8);
  RSW.WebWalk(SummonSpots.RandomValue, 25, 0.9);
end;

procedure FailSafe;
begin
  if chat.FindMessage("have room to", [CHAT_COLOR_BLACK]) then
  //add logic for world hopping
    terminatescript("=====Can't summon at this spot. Hop worlds and move character.======");
end;

procedure Banking;
var
  RingofDueling := TRSBankItem.Setup('Ring of dueling(8)', 1, False);
  RingofWealth  := TRSBankItem.Setup('Ring of wealth(5)', 1, False);
  ArdougneCloak := TRSBankItem.Setup(ArdyCloak, 1, False);
  FairyRStaff   := TRSBankItem.Setup(FairyRingStaff, 1, False);
  FoodNameSTP   := TRSBankItem.Setup(FoodName, 4, False);

  Earthrune     := TRSBankItem.Setup('Earth rune', 100, False);
  Lawrune       := TRSBankItem.Setup('Law rune', 50, False);
  Bodyrune      := TRSBankItem.Setup('Body rune', 100, False);
  Soulrune      := TRSBankItem.Setup('Soul rune', 100, False);
  Bloodrune     := TRSBankItem.Setup('Blood rune', 100, False);
  Naturerune    := TRSBankItem.Setup('Nature rune', 100, False);
  EnsouledHead  := TRSBankItem.Setup(HeadName, -1, False);

begin
  Writeln("Banking");
  if not RSClient.IsLoggedIn then exit;

  if (Minimap.GetHPPercent() <= 85) and Inventory.ContainsConsumable(ERSConsumable.FOOD) then
    repeat
      Inventory.Consume(ERSConsumable.FOOD);
    until (not Minimap.GetHPPercent() <= 85) or (not Inventory.ContainsConsumable(ERSConsumable.FOOD));

  if InCWarsArea then
  begin
    RSW.WebWalk([5164, 4115], 5, 0.1);
    wait(SRL.SkewedRand(500, 250, 1500));
    repeat Bank.open(ERSBANKLOCATION.CASTLE_WARS);
    until bank.IsOpen(1500, 500);
      wait(SRL.SkewedRand(750, 500, 1500));
    If not Inventory.ContainsItem("Ring of dueling(1..8)") then
      writeln("Withdrawing 1x Ring of dueling (8)");
      Bank.WithdrawItem(RingofDueling, False);
  end;

  if InFeroxEnclave then
  begin
    RSW.WebWalk([7932, 1933], 5, 0.1);
    wait(SRL.SkewedRand(500, 250, 1500));
    repeat Bank.open(ERSBANKLOCATION.FEROX);
    until bank.IsOpen(1500, 500);
      wait(SRL.SkewedRand(750, 500, 1500));
    If not Inventory.ContainsItem("Ring of dueling(1..8)") then
      writeln("Withdrawing 1x Ring of dueling (8)");
      Bank.WithdrawItem(RingofDueling, False);
  end;

  if InGE then
  begin
    RSW.WebWalk([8052, 2503], 5, 0.5);
    wait(SRL.SkewedRand(500, 250, 1500));
    repeat Bank.open(ERSBANKLOCATION.GRAND_EXCHANGE);
    until bank.IsOpen(1500, 500);
      wait(SRL.SkewedRand(750, 500, 1500));
    If not Inventory.ContainsItem("Ring of wealth(1..5)") then
      writeln("Withdrawing 1x Ring of wealth (5)");
      Bank.WithdrawItem(RingofWealth, False);
  end;

  If Not bank.ContainsItem(Headname) then
    Terminatescript("Could not find [" + HeadName + "] in bank, terminating script.");

  // DarkAltarTeleportMethod handler
  case DarkAltarTeleportMethod of
  "Fairy Ring":
    begin
      if not Inventory.ContainsItem(ArdyCloak) then
      begin
        writeln("Withdrawing 1x " + ArdyCloak);
        Bank.WithdrawItem(ArdougneCloak, False);
      end;

      if (LumbridgeDiary < 4) then
      begin
        if not Inventory.ContainsItem(FairyRingStaff) then
          writeln("Player has not completed the Elite Lumbridge Diary");
          writeln("Withdrawing 1x " + FairyRingStaff);
          Bank.WithdrawItem(FairyRStaff, False);
      end;
    end;

  "Arceus Library":
    begin
      if Inventory.CountItemStack("Earth rune") <= 10 then
        Bank.WithdrawItem(Earthrune, False);

      if Inventory.CountItemStack("Law rune") <= 10 then
        Bank.WithdrawItem(Lawrune, False);
    end;
end;

// Bank withdraw of runes depending on the spell used
case EnsouledHeadHandler of
  ERSSPELL.BASIC_REANIMATION:
    begin
      if Inventory.CountItemStack("Body rune") <= 100 then
        Bank.WithdrawItem(Bodyrune, False);
    end;

  ERSSPELL.ADEPT_REANIMATION:
    begin
      if Inventory.CountItemStack("Bodyrune") <= 100 then
        Bank.WithdrawItem(Bodyrune, False);

      if Inventory.CountItemStack("Soul rune") <= 100 then
        Bank.WithdrawItem(Soulrune, False);
    end;

  ERSSPELL.EXPERT_REANIMATION, ERSSPELL.MASTER_REANIMATION:
    begin
      if Inventory.CountItemStack("Blood rune") <= 100 then
        Bank.WithdrawItem(Bloodrune, False);

      if Inventory.CountItemStack("Soul rune") <= 100 then
        Bank.WithdrawItem(Soulrune, False);
    end;
end;

  If Inventory.CountItemStack("Nature rune") <= 50 then
    Bank.WithdrawItem(Naturerune, False);

     // Add logic for custom food instead of generic ERSConsumable.FOOD //
  //If not inventory.HasEnoughConsumable(ERSConsumable.FOOD) then
  //Bank.WithdrawConsumable(ERSConsumable.FOOD);
     // Add logic for custom food instead of generic ERSConsumable.FOOD //

  If not Inventory.CountItem(HeadName) then
  begin
    Bank.WithdrawItem(EnsouledHead, False);
    waituntil(Inventory.ContainsItem(Headname), 250, 5000);
  end;

  If bank.IsOpen then Bank.close;
  Waituntil(not bank.IsOpen, 500, 15000);
end;

procedure ToZeah_FairyRing;
begin
  if not RSClient.IsLoggedIn then exit;
  writeln("Traveling to Zeah using the FairyRing");
  writeln('Teleporting to Ardy Monastary');
  Transport.run(rsteleports.MONASTERY);
  Waituntil(InMonasteryArea, 500, 7500);
  Transport.Run(RSTeleports.CIS_NORTH_OF_THE_ARCEUUS_LIBRARY);
  Waituntil(INZeahArea, 500, 7500);
  Waituntil(Inventory.ClickItem(MainWeapon), 300, 2000);
  RSMouseZoom.SetZoomLevel(Random(2, 15));
end;

procedure ToZeah_ArceusLibrary;
begin
  if not RSClient.IsLoggedIn then exit;
  writeln("Traveling to Zeah using the Arceus Library teleport");
  Magic.CastSpell(ERSSPELL.ARCEUUS_LIBRARY_TELEPORT);
  Waituntil(INZeahArea, 500, 7500);
  RSMouseZoom.SetZoomLevel(Random(2, 15));
end;

procedure ToCwars;
var
  i: Int32;

begin
  if not RSClient.IsLoggedIn then exit;
  writeln("Teleporting to Castle Wars");
  for i := 0 to High(ROD) do
    begin
      inventory.ClickItem(ROD[i], 'Castle Wars');
    end;
  Waituntil(InCWarsArea, 250, 8000);

  end;

procedure ToFeroxEnclave;
var
  i: Int32;

begin
  if not RSClient.IsLoggedIn then exit;
  writeln("Teleporting to Ferox Enclave");
  for i := 0 to High(ROD) do
    begin
      inventory.ClickItem(ROD[i], 'Ferox Enclave');
    end;
  Waituntil(InCWarsArea, 250, 8000);

end;

procedure ToGE;
var
  i: Int32;

begin
  if not RSClient.IsLoggedIn then exit;
  writeln("Teleporting to the Grand Exchange");
  for i := 0 to High(ROW) do
    begin
      inventory.ClickItem(ROW[i], 'Castle Wars');
    end;
  Waituntil(InCWarsArea, 250, 8000);

  end;

procedure Summon;
var
  HeadCount, i  : Integer;
  StartXP, c    : Int32;
begin
  //writeln("Summon");
  if not RSClient.IsLoggedIn then exit;
  begin
      WaitUntil(not MainScreen.WaitInCombat(2400), 500, 15000);
      writeln("Not in combat, starting reanimation");
      Magic.CastSpell(EnsouledHeadHandler);
      WaitUntil(Inventory.IsOpen, 500, 6000);
      HeadCount := Inventory.CountItem(HeadName);
      //writeln(IntToStr(HeadCount));
      if not inventory.ContainsItem(HeadName) then
      begin
        Wait(SRL.SkewedRand(750, 500, 6000));
        Mouse.move(InvBox);
        Wait(Srl.SkewedRand(500, 300, 1000));
        Mouse.Click(MOUSE_LEFT);
        Waituntil(not Mainscreen.isuptext("Reanimate"), 500, 2000);
        ToCWars();
        Waituntil(InCWArsArea, 500, 5000);
        exit;
      end;

    Inventory.MouseItem(HeadName);
    waituntil(Mainscreen.IsUpText(Headname), 250, 5500);
    Mouse.click(MOUSE_LEFT);
    Wait(SRL.SkewedRand(4500, 1750, 12500));
    if Headcount = 1 then
      inventory.open()
    else
      Mouse.move(HoverSpell);
  end;

  //battle begin
  StartXP := XPBar.read;

  For i to 80 do
  begin
    If Minimap.GetHPPercent <= 67 then
    begin
       Inventory.Consume(ERSConsumable.FOOD);
    end;

    {if UseSpec then
    begin
      Minimap.EnableSpec(SpecPercent);
    end;}

    If Minimap.GetHPPercent <= 20 then
    begin
      for c := 0 to High(ROD) do
    begin
      inventory.ClickItem(ROD[c], 'Castle Wars');
    end;
      //Magic.CastSpell(ERSSPELL.ARCEUUS_LIBRARY_TELEPORT);
      Terminatescript("Low health with no food");
    end;

    If Startxp <> XPBar.read then
      Break;
    wait(random(500, 650));
  end;                    // battle end

  if (HeadCount = 1) then
    begin
      writeln("Head count is 1, going to Castle Wars");
      toCwars();
      exit();
  end;
  exit;
end;

procedure ScriptReport()
var
  CurrentXP : Int32;
begin
  CurrentXP := XPBar.Read();
  Writeln('Made ', (CurrentXP - StartXP), ' EXP since we started');
  Writeln('Currently making ', Round(((CurrentXP - StartXP) * 3600) / (GetTimeRunning / 1000)),' EXP/HR hour');
end;

procedure MainLoop;
begin

if (not RSClient.IsLoggedIn) then
    Exit;

  Failsafe();

  If InSummonArea then
    begin
      Summon();
      exit;
    end;

  If InZeahArea and (not inSummonArea) then
    begin
      WalkToSummon();
      exit;
    end;

  If InCWarsArea or InFeroxEnclave or InGE and (not Inventory.ContainsItem(HeadName)) then
  begin
    Banking();
    exit;
  end;

  if InCwarsArea or InFeroxEnclave or InGE and Inventory.ContainsItem(HeadName) and (DarkAltarTeleportMethod = 'Fairy Ring') then
  begin
    ToZeah_FairyRing();
    exit;
  end;

 If InCwarsArea or InFeroxEnclave or InGE and Inventory.ContainsItem(HeadName) and (DarkAltarTeleportMethod = "Arceus Library") then
  begin
    ToZeah_ArceusLibrary();
    exit;
  end;

  If (Not InSummonArea) and InZeahArea then
  begin
    WalkToSummon();
    exit;
  end;
end;

procedure TempDebugger()
  begin
    writeln(ArdyCloak);
    Terminatescript("Done.");
  end;

begin
if (not RSClient.IsLoggedIn) then
  begin
  if Login.GetPlayer.Password <> '' then
    Login.LoginPlayer
  else
  writeln('No player credentials');
    Exit;
  end;

//TempDebugger();
  Init();
  if not InCwarsArea or InFeroxEnclave or InGE then
  Terminatescript("Please make sure you are in either the Ferox Enclave,
  Castle Wars or the Grand Exchange before starting the script");

  while true do
  begin
    antiban.DoAntiban();
    MainLoop();
  end;
end.
